File I/O
외부메모리 사용 시 permission  필요
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />


RecyclerView
- gradle에 Dependencies 추가 implementation 'com.android.support:recyclerview-v7:28.0.0'
- Adapter
	1. View에 데이엍를 공급하는 역할. RecyclerView는 Adapter 클래스를 상속하여 사용, 아래 3가지 인터페이스 반드시 구현.
		1)OnCreateViewHolder(ViewGroup parent, int viewType)
			: view를 만들고 view를 관리하기 위해 ViewHolder를 생성한다. 그리고 생성된 ViewHolder를 OnBindViewHolder에게 넘겨준다.
		2)OnBindViewHolder(ViewHolder holder, int position)
			: 스크롤이 움직일 때 호출되며 재활용 가능한 뷰가 있으면 실행되는 메소드. 뷰 홀더 position에 있는 데이터를 넣는 작업 수행(데이터 바인딩)
			  * holder : 주어진 위치에 있는 아이템의 내용을 표현하기 위해 업데이트가 이루어져야하는 viewholder
			  * position : 어댑터 데이터세트에 있는 아이템의 위치
		3) getItemCount() : 아이템의 개수 반환.

- ViewHolder
	: ViewHolder는 View를 보존하여 재사용을 가능하게 함. 각 뷰들을 저장하고 필요할 때 꺼내서 사용.
	  OnCreateViewHolder Method 안에서 ViewHolder 객체를 생성해서 사용.



전화 걸기

Permission
	<uses-permission android:name="android.permission.CALL_PHONE" />
	<uses-permission android:name="android.permission.DIAL_PHONE" />

Intent
- "tel:" + stringNumber
- 전화걸기 : ACTION_CALL, 다이얼 : ACTION_DIAL

**like (
				String receiver = editText.getText().toString();
                Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:"+ receiver));

                startActivity(intent);

		)this.


Realm DB
- 모바일에 최적화된 로컬 데이터베이스 라이브러리, 데이터를 객체의 형태로 저장 (스마트폰 자체가 DB역할)
- ORM(Object-Relational mapping)은 객체와 데이터베이스의 테이블 사이에서 중간다리로 데이터를 매핑하는 역할
  본래 객체의 데이터를 데이터베이스에 저장하려면 쿼리문을 사용해야 함
- Realm은 데이터 컨테이너 모델을 사용해 객체를 직접 데이터베이스에 저장. 데이터를 중간에 변환할 필요가 없기 때문에 빠른 저장 및 불러오기 가능\

특성
- Realm 모델 객체는 특정 객체를 상속받거나 구현해야함; RealmObject를 상속하거나 RealmModel을 구현
- 무 복제 매커니즘과 크로스 플랫폼 호환성, 자동갱신 이점을 갖기 위함.
- 무 복제 매커니즘 : 실제로 사용되기 전에는 java에 복제되지 않는 작동원리.
- 자동 갱신 : 데이터를 추가하면 리스트 뷰가 자동으로 갱신되고, 자동으로 갱신된 데이터를 파악하기 위해 알림이 전달되며, 알림이 전달될 때 UI를 새로 그릴 수 있도록 함

- 사용
gradle(Project) : classpath 'io.realm:realm-gradle-plugin:3.5.0'
gradle(Module)  : apply plugin: 'realm-android'